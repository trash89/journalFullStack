
"""
This file was generated by graphql-schema-generator which is
maintained by prisma-korea.

Do not make changes to this file directly.
Read more about in https://github.com/prisma-korea/graphql-schema-generator.
"""
type Query {
  profile(idProfile: ID!): profile
  profiles: [profile!]!
  client(idClient: ID!): client
  clients: [client!]!
  project(idProject: ID!): project
  projects: [project!]!
  subproject(idSubproject: ID!): subproject
  subprojects: [subproject!]!
  journal(idJournal: ID!): journal
  journals: [journal!]!
  schema_migrations(version: ID!): schema_migrations
  schema_migrationss: [schema_migrations!]!
}

input profileCreateInput {
  Username: String!
  Password: String!
  Is_Admin: String!
  client: [client!]!
  journal: [journal!]!
}

input profileUpdateInput {
  Username: String
  Password: String
  Is_Admin: String
  client: [client!]
  journal: [journal!]
}

input clientCreateInput {
  Name: String!
  Description: String!
  StartDate: DateTime!
  EndDate: DateTime
  profile: profile!
  journal: [journal!]!
  project: [project!]!
  subproject: [subproject!]!
}

input clientUpdateInput {
  Name: String
  Description: String
  StartDate: DateTime
  EndDate: DateTime
  profile: profile
  journal: [journal!]
  project: [project!]
  subproject: [subproject!]
}

input projectCreateInput {
  Name: String!
  Description: String!
  isDefault: String!
  StartDate: DateTime!
  EndDate: DateTime
  Finished: String!
  client: client!
  journal: [journal!]!
  subproject: [subproject!]!
}

input projectUpdateInput {
  Name: String
  Description: String
  isDefault: String
  StartDate: DateTime
  EndDate: DateTime
  Finished: String
  client: client
  journal: [journal!]
  subproject: [subproject!]
}

input subprojectCreateInput {
  Name: String!
  Description: String!
  isDefault: String!
  StartDate: DateTime!
  EndDate: DateTime
  Finished: String!
  client: client!
  project: project!
  journal: [journal!]!
}

input subprojectUpdateInput {
  Name: String
  Description: String
  isDefault: String
  StartDate: DateTime
  EndDate: DateTime
  Finished: String
  client: client
  project: project
  journal: [journal!]
}

input journalCreateInput {
  createdAt: DateTime!
  updatedAt: DateTime!
  EntryDate: DateTime!
  Description: String!
  Todos: String
  ThingsDone: String
  DocUploaded: ByteArray
  client: client!
  profile: profile!
  project: project!
  subproject: subproject!
}

input journalUpdateInput {
  createdAt: DateTime
  updatedAt: DateTime
  EntryDate: DateTime
  Description: String
  Todos: String
  ThingsDone: String
  DocUploaded: ByteArray
  client: client
  profile: profile
  project: project
  subproject: subproject
}

input schema_migrationsCreateInput {
  dirty: Boolean!
}

input schema_migrationsUpdateInput {
  dirty: Boolean
}

type Mutation {
  createprofile(profile: profileCreateInput!): profile
  updateprofile(profile: profileUpdateInput!): profile
  deleteprofile(idProfile: ID!): profile
  createclient(client: clientCreateInput!): client
  updateclient(client: clientUpdateInput!): client
  deleteclient(idClient: ID!): client
  createproject(project: projectCreateInput!): project
  updateproject(project: projectUpdateInput!): project
  deleteproject(idProject: ID!): project
  createsubproject(subproject: subprojectCreateInput!): subproject
  updatesubproject(subproject: subprojectUpdateInput!): subproject
  deletesubproject(idSubproject: ID!): subproject
  createjournal(journal: journalCreateInput!): journal
  updatejournal(journal: journalUpdateInput!): journal
  deletejournal(idJournal: ID!): journal
  createschema_migrations(schema_migrations: schema_migrationsCreateInput!): schema_migrations
  updateschema_migrations(schema_migrations: schema_migrationsUpdateInput!): schema_migrations
  deleteschema_migrations(version: ID!): schema_migrations
}

scalar DateTime

scalar ByteArray

type profile {
  idProfile: ID!
  Username: String!
  Password: String!
  Is_Admin: String!
  client: [client!]!
  journal: [journal!]!
}

type client {
  idClient: ID!
  Name: String!
  Description: String!
  StartDate: DateTime!
  EndDate: DateTime
  profile: profile!
  journal: [journal!]!
  project: [project!]!
  subproject: [subproject!]!
}

type project {
  idProject: ID!
  Name: String!
  Description: String!
  isDefault: String!
  StartDate: DateTime!
  EndDate: DateTime
  Finished: String!
  client: client!
  journal: [journal!]!
  subproject: [subproject!]!
}

type subproject {
  idSubproject: ID!
  Name: String!
  Description: String!
  isDefault: String!
  StartDate: DateTime!
  EndDate: DateTime
  Finished: String!
  client: client!
  project: project!
  journal: [journal!]!
}

type journal {
  idJournal: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  EntryDate: DateTime!
  Description: String!
  Todos: String
  ThingsDone: String
  DocUploaded: ByteArray
  client: client!
  profile: profile!
  project: project!
  subproject: subproject!
}

type schema_migrations {
  version: ID!
  dirty: Boolean!
}