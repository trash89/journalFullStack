type Query {
  profile(idProfile: ID!): TProfile
  client(idClient: ID!): TClient
  project(idProject: ID!): TProject
  subproject(idSubproject: ID!): TSubproject
  journal(idJournal: ID!): TJournal

  profiles: [TProfile!]!
  clients: [TClient!]!
  projects: [TProject!]!
  subprojects: [TSubproject!]!
  journals: [TJournal!]!
}

type AuthPayload {
  token: String
  profile: TProfile
}

type Mutation {
  login(Username: String!, Password: String!): AuthPayload!

  createProfile(
    Username: String!
    Password: String!
    Is_Admin: String!
  ): TProfile!
  updateProfile(
    idProfile: ID!
    Username: String!
    Password: String!
    Is_Admin: String!
  ): TProfile!
  deleteProfile(idProfile: ID!): TProfile!

  createClient(
    Name: String!
    Description: String!
    StartDate: DateTime!
    EndDate: DateTime
  ): TClient!
  updateClient(
    idClient: ID!
    Name: String!
    Description: String!
    StartDate: DateTime!
    EndDate: DateTime
  ): TClient!
  deleteClient(idClient: ID!): TClient!

  createProject(
    idClient: ID!
    Name: String!
    Description: String!
    isDefault: String!
    StartDate: DateTime!
    EndDate: DateTime
    Finished: String!
  ): TProject!
  updateProject(
    idProject: ID!
    Name: String!
    Description: String!
    isDefault: String!
    StartDate: DateTime!
    EndDate: DateTime
    Finished: String!
  ): TProject!
  deleteProject(idProject: ID!): TProject!

  createSubproject(
    idProject: ID!
    idClient: ID!
    Name: String!
    Description: String!
    isDefault: String!
    StartDate: DateTime!
    EndDate: DateTime
    Finished: String!
  ): TSubproject!
  updateSubproject(
    idSubproject: ID!
    Name: String!
    Description: String!
    isDefault: String!
    StartDate: DateTime!
    EndDate: DateTime
    Finished: String!
  ): TSubproject!
  deleteSubproject(idSubproject: ID!): TSubproject!

  createJournal(
    idProfile: ID!
    idClient: ID!
    idProject: ID!
    idSubproject: ID!
    EntryDate: DateTime!
    Description: String!
    Todos: String
    ThingsDone: String
    DocUploaded: ByteArray
  ): TJournal!
  updateJournal(
    idJournal: ID!
    EntryDate: DateTime!
    Description: String!
    Todos: String
    ThingsDone: String
    DocUploaded: ByteArray
  ): TJournal!
  deleteJournal(idJournal: ID!): TJournal!
}

type TProfile {
  idProfile: ID!
  Username: String!
  Password: String!
  Is_Admin: String!
  client: [TClient!]!
  journal: [TJournal!]
}

type TClient {
  idProfile: ID!
  idClient: ID!
  Name: String!
  Description: String!
  StartDate: DateTime!
  EndDate: DateTime
  profile: TProfile!
  project: [TProject!]!
  journal: [TJournal!]
  subproject: [TSubproject!]
}

type TProject {
  idClient: ID!
  idProject: ID!
  Name: String!
  Description: String!
  isDefault: String!
  StartDate: DateTime!
  EndDate: DateTime
  Finished: String!
  client: TClient!
  subproject: [TSubproject!]
  journal: [TJournal!]
}

type TSubproject {
  idProject: ID!
  idClient: ID!
  idSubproject: ID!
  Name: String!
  Description: String!
  isDefault: String!
  StartDate: DateTime!
  EndDate: DateTime
  Finished: String!
  client: TClient!
  project: TProject!
  journal: [TJournal!]
}

type TJournal {
  idProfile: ID!
  idClient: ID!
  idProject: ID!
  idSubproject: ID!
  idJournal: ID!
  createdAt: DateTime
  updatedAt: DateTime
  EntryDate: DateTime!
  Description: String!
  Todos: String
  ThingsDone: String
  DocUploaded: ByteArray
  profile: TProfile!
  client: TClient!
  project: TProject!
  subproject: TSubproject!
}

scalar DateTime
scalar ByteArray
